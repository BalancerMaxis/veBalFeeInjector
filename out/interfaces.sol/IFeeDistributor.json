{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "depositTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimeCursor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "depositToken(address,uint256)": "338b5dea",
    "depositTokens(address[],uint256[])": "7b8d6221",
    "getTimeCursor()": "82aa5ad4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"depositTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeCursor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"depositToken(address,uint256)\":{\"details\":\"Sending tokens directly to the FeeDistributor instead of using `depositTokens` may result in tokens being retroactively distributed to past weeks, or for the distribution to carry over to future weeks. If for some reason `depositTokens` cannot be called, in order to ensure that all tokens are correctly distributed manually call `checkpointToken` before and after the token transfer.\",\"params\":{\"amount\":\"- The amount of tokens to deposit.\",\"token\":\"- The ERC20 token address to distribute.\"}},\"depositTokens(address[],uint256[])\":{\"details\":\"A version of `depositToken` which supports depositing multiple `tokens` at once. See `depositToken` for more details.\",\"params\":{\"amounts\":\"- An array of token amounts to deposit.\",\"tokens\":\"- An array of ERC20 token addresses to distribute.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"depositToken(address,uint256)\":{\"notice\":\"Deposits tokens to be distributed in the current week.\"},\"depositTokens(address[],uint256[])\":{\"notice\":\"Deposits tokens to be distributed in the current week.\"},\"getTimeCursor()\":{\"notice\":\"Returns the global time cursor representing the most earliest uncheckpointed week.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces.sol\":\"IFeeDistributor\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=lib/chainlink/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"contracts/interfaces.sol\":{\"keccak256\":\"0x3dcd0677c0400d44d5bdc4b57e8bc259f51d201403a25374f82734150b142380\",\"urls\":[\"bzz-raw://8102f1924173f59231f6a931ce926bb6e9c1ea9978e1b357986f2147d0a8b471\",\"dweb:/ipfs/QmbheGmbWEMx3CojQ6yt7syBjUoz3kU1qqEC5X2RgoJNe3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.6+commit.11564f7e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositToken"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositTokens"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTimeCursor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "depositToken(address,uint256)": {
            "details": "Sending tokens directly to the FeeDistributor instead of using `depositTokens` may result in tokens being retroactively distributed to past weeks, or for the distribution to carry over to future weeks. If for some reason `depositTokens` cannot be called, in order to ensure that all tokens are correctly distributed manually call `checkpointToken` before and after the token transfer.",
            "params": {
              "amount": "- The amount of tokens to deposit.",
              "token": "- The ERC20 token address to distribute."
            }
          },
          "depositTokens(address[],uint256[])": {
            "details": "A version of `depositToken` which supports depositing multiple `tokens` at once. See `depositToken` for more details.",
            "params": {
              "amounts": "- An array of token amounts to deposit.",
              "tokens": "- An array of ERC20 token addresses to distribute."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "depositToken(address,uint256)": {
            "notice": "Deposits tokens to be distributed in the current week."
          },
          "depositTokens(address[],uint256[])": {
            "notice": "Deposits tokens to be distributed in the current week."
          },
          "getTimeCursor()": {
            "notice": "Returns the global time cursor representing the most earliest uncheckpointed week."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=lib/chainlink/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":chainlink/=lib/chainlink/integration-tests/contracts/ethereum/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/interfaces.sol": "IFeeDistributor"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces.sol": {
        "keccak256": "0x3dcd0677c0400d44d5bdc4b57e8bc259f51d201403a25374f82734150b142380",
        "urls": [
          "bzz-raw://8102f1924173f59231f6a931ce926bb6e9c1ea9978e1b357986f2147d0a8b471",
          "dweb:/ipfs/QmbheGmbWEMx3CojQ6yt7syBjUoz3kU1qqEC5X2RgoJNe3"
        ],
        "license": null
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/interfaces.sol",
    "id": 30,
    "exportedSymbols": {
      "IERC20": [
        993
      ],
      "IFeeDistributor": [
        29
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:1432:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "0:22:0",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".6"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "24:56:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30,
        "sourceUnit": 994,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29,
        "nodeType": "ContractDefinition",
        "src": "83:1349:0",
        "nodes": [
          {
            "id": 8,
            "nodeType": "FunctionDefinition",
            "src": "229:57:0",
            "nodes": [],
            "documentation": {
              "id": 3,
              "nodeType": "StructuredDocumentation",
              "src": "115:109:0",
              "text": " @notice Returns the global time cursor representing the most earliest uncheckpointed week."
            },
            "functionSelector": "82aa5ad4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTimeCursor",
            "nameLocation": "238:13:0",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "251:2:0"
            },
            "returnParameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8,
                  "src": "277:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "277:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "276:9:0"
            },
            "scope": 29,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 17,
            "nodeType": "FunctionDefinition",
            "src": "920:61:0",
            "nodes": [],
            "documentation": {
              "id": 9,
              "nodeType": "StructuredDocumentation",
              "src": "292:623:0",
              "text": " @notice Deposits tokens to be distributed in the current week.\n @dev Sending tokens directly to the FeeDistributor instead of using `depositTokens` may result in tokens being\n retroactively distributed to past weeks, or for the distribution to carry over to future weeks.\n If for some reason `depositTokens` cannot be called, in order to ensure that all tokens are correctly distributed\n manually call `checkpointToken` before and after the token transfer.\n @param token - The ERC20 token address to distribute.\n @param amount - The amount of tokens to deposit."
            },
            "functionSelector": "338b5dea",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositToken",
            "nameLocation": "929:12:0",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "949:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "942:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$993",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 993,
                      "src": "942:6:0"
                    },
                    "referencedDeclaration": 993,
                    "src": "942:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$993",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "964:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "956:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "956:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "941:30:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "980:0:0"
            },
            "scope": 29,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28,
            "nodeType": "FunctionDefinition",
            "src": "1344:86:0",
            "nodes": [],
            "documentation": {
              "id": 18,
              "nodeType": "StructuredDocumentation",
              "src": "987:352:0",
              "text": " @notice Deposits tokens to be distributed in the current week.\n @dev A version of `depositToken` which supports depositing multiple `tokens` at once.\n See `depositToken` for more details.\n @param tokens - An array of ERC20 token addresses to distribute.\n @param amounts - An array of token amounts to deposit."
            },
            "functionSelector": "7b8d6221",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositTokens",
            "nameLocation": "1353:13:0",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "1385:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "1367:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$993_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 20,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 19,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 993,
                        "src": "1367:6:0"
                      },
                      "referencedDeclaration": 993,
                      "src": "1367:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$993",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 21,
                    "nodeType": "ArrayTypeName",
                    "src": "1367:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$993_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "1412:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "1393:26:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1393:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24,
                    "nodeType": "ArrayTypeName",
                    "src": "1393:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1366:54:0"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1429:0:0"
            },
            "scope": 29,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          29
        ],
        "name": "IFeeDistributor",
        "nameLocation": "93:15:0",
        "scope": 30,
        "usedErrors": []
      }
    ]
  },
  "id": 0
}